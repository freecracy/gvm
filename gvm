#!/bin/env bash
#https://api.github.com/repos/golang/go/branches
# 获取版本信息
#curl -sSf https://api.github.com/repos/golang/go/branches |grep name |grep release |awk '{printf $2"\n"}' | cut -c17- |tr -d '",'
# 下载相应版本go1.12.9.linux-amd64.tar.gz
{
    base=".gvm"
    base_dir="${HOME}/${base}"
    os=$(uname -s)
    file_os="linux" 
    if [[ $os == "Darwin" ]]; then
         file_os="darwin"
    fi
    
    if [[ ! -d $base_dir ]] ; then
        mkdir -p  $base_dir
    fi

    if [[ $1 == "list" && $2 == "" ]];then
        printf -- "list\n"
        for line in $(ls ${base_dir})  ;do
            if [[ $line == "tar" ]] ; then
                continue
            fi
            printf -- $line"\n"
        done
    fi

    if [[ $1 ==  "listall" ]];then
        printf -- "list all\n"
        version_all=$(curl -sSf https://api.github.com/repos/golang/go/branches |grep name |grep release |awk '{printf $2"\n"}' | cut -c17- |tr -d '",')
        for version in $version_all ;do
             printf -- $version"\n"
        done
    fi

    if [[ $1 == "add" || $1 == "install" && $2 != "" ]];then
        printf -- "add && install\n"
        printf -- "[1/4] 开始下载...\n"
        if [[ ! -e "${base_dir}/tar/${2}.${file_os}-amd64.tar.gz" ]] ; then
            echo "downloading..."
            wget -qP  $base_dir/tar  https://dl.google.com/go/${2}.${file_os}-amd64.tar.gz
        fi
        printf -- "[2/4] 开始解压...\n"
        if [[ ! -d "${base_dir}/${2}" ]] ;then
            echo "unzip......"
            tar xzf $base_dir/tar/${2}.${file_os}-amd64.tar.gz -C $base_dir
            mv "${base_dir}/go" "${base_dir}/${2}"
        fi
        printf -- "[3/4] 开始安装...\n"
        echo export GOROOT="${base_dir}/${2}" > ${HOME}/.gvmrc
        echo export GOTOOLDIR="${base_dir}/${2}/pkg/tool/linux_amd64" >> ${HOME}/.gvmrc
        echo export GOBIN="${base_dir}/${2}/bin" >> ${HOME}/.gvmrc
        echo export GVM=true >> ${HOME}/.gvmrc
        echo export GVM_VERSION=$2 >> ${HOME}/.gvmrc
        gvm_path="${base_dir}/${2}/bin"
        if [[ -z $GOPATH ]] ;then
            GOPATH="${HOME}/go"
        fi
        cp ${gvm_path}/go ${GOPATH}/bin/go
        cp ${gvm_path}/godoc ${GOPATH}/bin/godoc
        cp ${gvm_path}/gofmt ${GOPATH}/bin/gofmt
        printf -- "[4/4] 安装完成"
        gvm sersion
    fi

    if [[ $1 == "remove" || $1 == "uninstall" ]];then
        printf -- "remove && uninstall\n"
        if [[ $2 == "gvm" ]];then
            sudo rm -rf /usr/local/bin && rm -rf ${base_dir} && rm -rf  "${HOME}/.gvmrc"        
        fi
        if [[ -d "${base_dir}/${2}" ]] ;then
            rm -rf "${base_dir}/${2}"
        fi
    fi
    
    if [[ $1 == "use" ||  $1 == "select" && $2 != "" ]];then
        printf -- "use && select\n"
        if [[ ! -d "${base_dir}/${2}" ]];then
            gvm add $2
        fi
        echo export GOROOT="${base_dir}/${2}" > ${HOME}/.gvmrc
        echo export GOTOOLDIR="${base_dir}/${2}/pkg/tool/linux_amd64" >> ${HOME}/.gvmrc
        echo export GOBIN="${base_dir}/${2}/bin" >> ${HOME}/.gvmrc
        echo export GVM=true >> ${HOME}/.gvmrc
        echo export GVM_VERSION=$2 >> ${HOME}/.gvmrc
        gvm_path="${base_dir}/${2}/bin"
        if [[ -z $GOPATH ]] ;then
            GOPATH="${HOME}/go"
        fi
        cp ${gvm_path}/go ${GOPATH}/bin/go
        cp ${gvm_path}/godoc ${GOPATH}/bin/godoc
        cp ${gvm_path}/gofmt ${GOPATH}/bin/gofmt
    fi

    if [[ $1 == "version" || $1 == "-v" ]] ; then
        if command -v go > /dev/null ;then
            go version
        fi
    fi

    if [[ $1 == "help" || $1 == "-h" || $1 = "" ]] ; then
        printf -- "Use Age:\n"
        printf -- "    gvm list\n"
        printf -- "    gvm listall\n"
        printf -- "    gvm add\n"
        printf -- "    gvm use\n"
        printf -- "    gvm version\n"
        printf -- "    gvm remove\n"
        printf -- "    gvm help\n"
    fi

}
exit 0


base_dir=$HOME"/.gvm"

if [[ ! -d $base_dir ]] ; then
    mkdir -p  $base_dir
fi

echo "[1/3]"
if [[ ! -e "${base_dir}/tar/go1.12.9.linux-amd64.tar.gz" ]] ; then
    echo "downloading..."
    wget -qP  $base_dir/tar  https://dl.google.com/go/go1.12.9.linux-amd64.tar.gz
fi

echo "[2/3]"
if [[ ! -d "$base_dir/go1.12.9" ]] ;then
    echo "downloading......"
    tar xzf $base_dir/tar/go1.12.9.linux-amd64.tar.gz -C $base_dir
    mv $base_dir/go $base_dir/go1.12.9
fi

echo "[3/3]"
echo export GOROOT="${base_dir}/go1.12.9" > ${HOME}/.gvmrc
echo export GOTOOLDIR="${GOROOT}/pkg/tool/linux_amd64" >> ${HOME}/.gvmrc
echo export GOBIN="${base_dir}/bin" >> ${HOME}/.gvmrc
echo export GVM=true >> ${HOME}/.gvmrc
if [[ ! $GVM ]]; then
    [[ -s "${HOME}/.gvmrc" ]] &&  echo source "${HOME}/.gvmrc" >> ${HOME}/.zshrc
fi
